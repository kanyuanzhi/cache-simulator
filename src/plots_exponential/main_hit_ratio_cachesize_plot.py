import matplotlib as mpl
mpl.use('TkAgg')
import matplotlib.pyplot as plt
import numpy as np


if __name__ == "__main__":
    font1 = {
        'family': 'Arial',
        'size': 13,
    }

    font2 = {
        'family': 'Arial',
        'size': 10,
    }

    hit_ratio_model_reactive = [0.12185411242800682, 0.14846782742621975, 0.16640640097621193, 0.17920651987115402, 0.18864937535259474, 0.1957574348232196, 0.20117795992166393, 0.2053479750488385, 0.20857539985638723, 0.21108371035422827, 0.21303861577565658, 0.21456496141798354, 0.21575793215924566, 0.21669075017633135, 0.21742012032362273, 0.21799017444126015, 0.21843538363709955, 0.21878274207285864, 0.2190534249702764]

    hit_ratio_model_proactive_remove = [0.13184644752692853, 0.1643851366776737, 0.1878578925435219, 0.20539202162510453, 0.217940786239641, 0.21997647766031583, 0.21997647766030926, 0.21997647766031586, 0.2199764776598834, 0.2199764776598834, 0.2199764776598834, 0.2199764776598834, 0.2199764776598834, 0.2199764776598834, 0.2199764776598834, 0.2199764776598834, 0.2199764776598834, 0.2199764776598834, 0.2199764776598834]

    hit_ratio_model_proactive_renew = [0.13589213850207016, 0.17331230395482766, 0.20267248446764338, 0.22718872218859096, 0.24845522566285613, 0.2673630977470805, 0.2844660939991428, 0.3001359109989728, 0.3146358583827293, 0.328159988596835, 0.34085580262379145, 0.35283827898948306, 0.3641989492359823, 0.37501198712199085, 0.38533842203586444, 0.39522913333652226, 0.4047270284704211, 0.4138686599634232, 0.4226854475281816]

    hit_ratio_model_proactive_optional_renew = [0.14312141646424986, 0.1847509634791129, 0.21796342106218286, 0.2457286154339288, 0.26909600637305375, 0.28017433911278466, 0.28017433911278466, 0.28017433911278466, 0.28017433911278466, 0.28017433911278466, 0.28017433911278466, 0.28017433911278466, 0.28017433911278466, 0.28017433911278466, 0.28017433911278466, 0.28017433911278466, 0.28017433911278466, 0.28017433911278466, 0.28017433911278466]



    hit_ratio_sim_reactive = [0.1225637934498694, 0.14433448787728848, 0.16359572883039483, 0.17903626428216593, 0.1874656679151061, 0.19663673793342923, 0.19685892609470973, 0.20648180765940316, 0.21020810569186452, 0.20812207728279597, 0.21297319007932522, 0.2119021685315378, 0.21463513036461748, 0.22213251248927687, 0.21329040696212084, 0.21861826117145267, 0.21834259213085324, 0.21693700865757787, 0.21746609997976118]

    hit_ratio_sim_proactive_remove = [0.1305038595088806, 0.164913140445449, 0.18663770886399006, 0.20332683067988486, 0.21258469410189276, 0.2199362431341638, 0.21816108811829468, 0.21902043314453704, 0.2194925674527406, 0.22057378856833537, 0.220053300799512, 0.21816095967279348, 0.21931310256358863, 0.21790044337161923, 0.2189386129100063, 0.2199027178818574, 0.2192573372137873, 0.22116724651339997, 0.21720281885697448]

    hit_ratio_sim_proactive_renew = [0.13628793902750064, 0.1740309650817162, 0.20208713931780076, 0.22771545308332417, 0.2459397100114614, 0.2691907468182182, 0.2839879908682642, 0.301022980873403, 0.3136778876235765, 0.32823807710041497, 0.33983095827032656, 0.35305482009419464, 0.3637196633236029, 0.3761353320862025, 0.38650031639104937, 0.3952918513195193, 0.4046380948578729, 0.4135599845647304, 0.4224039911241566]

    hit_ratio_sim_proactive_optional_renew = [0.142180949375648, 0.18413258428092472, 0.21814748956064814, 0.2447696347339103, 0.26563251804330396, 0.2770463737936006, 0.27905229213527877, 0.28088702752376504, 0.2813635637554411, 0.2826239288860415, 0.28088589744871933, 0.28039485193052605, 0.2807535870243294, 0.2800543298483375, 0.2788344172086043, 0.28087223869274, 0.2805099271889539, 0.2806964845353599, 0.28002650283098424]




    index_model = [i*25+50 for i in range(len(hit_ratio_model_reactive))]
    index_sim = [i*25+50 for i in range(len(hit_ratio_sim_proactive_remove))]

    plt.plot(index_sim, hit_ratio_sim_proactive_optional_renew, "x", color="black", label="sim: proactive optional renewing")
    plt.plot(index_sim, hit_ratio_sim_proactive_renew, ".", color="black", label="sim: proactive renewing")
    plt.plot(index_sim, hit_ratio_sim_proactive_remove, "2", color="black", label="sim: proactive removing")
    plt.plot(index_sim, hit_ratio_sim_reactive, "+", color="black", label="sim: reactive")

    plt.plot(index_model, hit_ratio_model_proactive_optional_renew,"--", color="black", linewidth="1", label="model: proactive optional renewing")
    plt.plot(index_model, hit_ratio_model_proactive_renew,"-", color="black", linewidth="1", label="model: proactive renewing")
    plt.plot(index_model, hit_ratio_model_proactive_remove,":", color="black", linewidth="1", label="model: proactive removing")
    plt.plot(index_model, hit_ratio_model_reactive, "-.", color="black", linewidth="1", label="model: reactive")


    # plt.plot(index, hit_ratio_model_uniform, label="model-uniform")
    # plt.plot(index, hit_ratio_model_exponential, label="model-exponential")

    plt.xlabel("cache size", font1)
    plt.ylabel("hit probability", font1)
    plt.grid(True)
    # plt.axis([50, 255, 0.1, 0.35], font1)
    my_x_ticks = np.arange(0, 501, 100)
    my_y_ticks = np.arange(0.1, 0.60, 0.05)
    plt.xticks(my_x_ticks)
    plt.yticks(my_y_ticks)
    plt.legend(prop=font2)
    # plt.savefig("kan6.eps")
    plt.show()

